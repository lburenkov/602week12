# -*- coding: utf-8 -*-
"""Assignment_09.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11NYWgIVhUlTqRKhHm5LTHfpLqA4aWyyB

## **Assignment #9**

In this assignment, you will practice using the plotly express library.  https://plotly.com/python/plotly-express/

Your goal is to recreate the following graphics below using plotly express. You should attempt to recreate them as close as possible.

You may work individually or with a group
"""

# Importing libraries
import plotly.express as px
df = px.data.tips()

df.head()

"""## **Bar Plot**

A barplot shows the relationship between a numeric and a categoric variable. Each entity of the categoric variable is represented as a bar. The size of the bar represents its numeric value.
"""

# Load the tips dataset
df = px.data.tips()

# Create a vertical bar plot of total bill amounts by gender with color differentiation for smokers
fig = px.bar(df, x='sex', y='total_bill', color='smoker',
             orientation='v',  # Set orientation to vertical
             title='Total Bill Amounts by Gender and Smoking Status',
             labels={'total_bill': 'Total Bill Amount', 'sex': 'Gender'},
             barmode='group')  # Set the bar mode to 'group'

# Show the plot
fig.show()





# Load the tips dataset
df = px.data.tips()

# Create a vertical bar plot of total bill amounts by gender with color differentiation for days
fig = px.bar(df, x='sex', y='total_bill', color='day',
             orientation='v',  # Set orientation to vertical
             title='Total Bill Amounts by Gender and Day',
             labels={'total_bill': 'Total Bill Amount', 'sex': 'Gender'},
             barmode='group')  # Set the bar mode to 'group'

# Show the plot
fig.show()

"""## **Scatter Plot**

Scatter plots are used to check the relationship between the variables and the distribution of the data. A scatterplot displays the relationship between 2 numeric variables. For each data point, the value of its first variable is represented on the X axis, the second on the Y axis
"""

# Load the tips dataset
df = px.data.tips()

# Create a scatter plot for smokers (smoker = 'Yes') and non-smokers (smoker = 'No')
fig = px.scatter(df, x='total_bill', y='tip', color='sex', facet_col='smoker',
                 title='Scatter Plots for Smokers and Non-Smokers',
                 labels={'total_bill': 'Total Bill', 'tip': 'Tip', 'sex': 'Gender'})

# Show the plot
fig.show()



#adding trend lines

# Load the tips dataset
df = px.data.tips()

# Create a scatter plot for smokers (smoker = 'Yes') and non-smokers (smoker = 'No') with trend lines
fig = px.scatter(df, x='total_bill', y='tip', color='sex', facet_col='smoker',
                 title='Scatter Plots for Smokers and Non-Smokers with Trend Lines',
                 labels={'total_bill': 'Total Bill', 'tip': 'Tip', 'sex': 'Gender'},
                 trendline='ols')  # 'ols' stands for ordinary least squares (linear regression)

# Show the plot
fig.show()

#exploring vs. day

# Load the tips dataset
df = px.data.tips()

# Create a scatter plot for each day (dinner and two lunches)
fig = px.scatter(df, x='total_bill', y='tip', facet_col='day', facet_row='time',
                 title='Scatter Plots for Tip versus Total Bill by Day and Meal Time',
                 labels={'total_bill': 'Total Bill', 'tip': 'Tip'})

# Show the plot
fig.show()

"""# **Histogram**

A histogram takes as input a numeric variable only. The variable is cut into several bins, and the number of observation per bin is represented by the height of the bar. It is possible to represent the distribution of several variable on the same axis using this technique.
"""

#Exploring distrubution of tip

# Load the tips dataset
df = px.data.tips()

# Create a histogram for the distribution of tips
fig = px.histogram(df, x='tip', nbins=30, title='Histogram of Tip Distribution',
                   labels={'tip': 'Tip Amount', 'count': 'Frequency'})

# Show the plot
fig.show()

"""# **Boxplot**

A boxplot gives a nice summary of one or several numeric variables. The line that divides the box into 2 parts represents the median of the data
"""



# Load the tips dataset
df = px.data.tips()

# Create a box plot for the distribution of tips based on smoker status with color differentiation
fig = px.box(df, x='smoker', y='tip', color='smoker',
             title='Box Plot of Tip Distribution by Smoker Status',
             labels={'tip': 'Tip Amount', 'smoker': 'Smoker Status'})

# Show the plot
fig.show()

"""Conlusion:

I think one the problems I faced while this exercise was the graph orientation. I think almost every plot it showed them horizontal instead of vertical.  Understanding how to control the orientation of plots, whether vertical or horizontal, is an important skill in data visualization.
"""